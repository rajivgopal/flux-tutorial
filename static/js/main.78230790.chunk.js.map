{"version":3,"sources":["components/common/Header.js","components/pages/HomePage.js","components/courses/CourseList.js","components/customTypes/CustomTypes.js","apiDispatcher.js","actions/courseActionTypes.js","courseStore/CourseStore.js","api/apiUtils.js","api/courseApi.js","actions/courseActions.js","actions/authorActionTypes.js","authorStore/AuthorStore.js","api/authorApi.js","actions/authorActions.js","components/courses/CoursesPage.js","components/pages/AboutPage.js","components/pages/404.js","components/common/Textinput.js","components/common/SelectInput.js","components/courses/CourseForm.js","components/courses/Course.js","components/authors/AuthorList.js","components/authors/AuthorsPage.js","components/authors/AuthorForm.js","components/authors/Author.js","components/App.js","index.js"],"names":["Header","activeStyle","color","exact","to","HomePage","className","CourseList","PropTypes","shape","id","number","title","string","isRequired","authorId","category","name","courses","deleteCourse","authors","map","course","authorName","author","find","_author","getAuthorName","key","onClick","slug","defaultProps","dispatcher","Dispatcher","LOAD_COURSES","LOAD_COURSE_BY_SLUG","ADD_COURSE","UPDATE_COURSE","DELETE_COURSE","_courses","courseStore","callback","this","on","removeListener","emit","_course","EventEmitter","register","action","type","CustomTypes","push","emitChange","filter","parseInt","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","loadCourses","fetch","then","catch","dispatch","actionTypes","saveCourse","method","headers","body","JSON","stringify","courseApi","savedCourse","courseId","LOAD_AUTHORS","SAVE_AUTHOR","UPDATE_AUTHOR","DELETE_AUTHOR","_authors","authorStore","loadAuthors","saveAuthor","_savedAuthor","deleteAuthor","CoursesPage","useState","store","getCourses","setCourses","getAuthors","setAuthors","onChange","useEffect","addChangeListener","length","courseActions","authorActions","removeChangeListener","toast","success","AboutPage","PageNotFound","TextInput","label","value","wrapperClass","htmlFor","SelectInput","options","CourseForm","onSubmit","errors","Course","props","setErrors","setCourse","match","params","getCourseBySlug","history","event","preventDefault","_errors","Object","keys","isFormInvalid","target","updatedCourse","AuthorList","AuthorsPage","AuthorForm","Author","setAuthor","getAuthorsById","updatedAuthor","App","autoClose","hideProgressBar","path","component","render","document","getElementById"],"mappings":"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","file":"static/js/main.78230790.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => {\n  const activeStyle = { color: \"orange\" };\n  return (\n    <nav>\n      <NavLink activeStyle={activeStyle} exact to=\"/\">\n        Home\n      </NavLink>{\" \"}\n      |{\" \"}\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\n        Courses\n      </NavLink>{\" \"}\n      |{\" \"}\n      <NavLink activeStyle={activeStyle} to=\"/authors\">\n        Authors\n      </NavLink>{\" \"}\n      |{\" \"}\n      <NavLink activeStyle={activeStyle} to=\"/about\">\n        About\n      </NavLink>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst HomePage = () => {\n  return (\n    <div className=\"jumbotran\">\n      <h1>React Flux Tutorial</h1>\n      <p> Managing courses</p>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport * as CustomTypes from \"../customTypes/CustomTypes\";\n\nconst CourseList = ({ courses, deleteCourse, authors }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>&nbsp;</th>\n          <th>Title</th>\n          <th>Author Id</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        {courses.map(course => {\n          const authorName = getAuthorName(authors, course);\n\n          return (\n            <tr key={course.id}>\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => deleteCourse(course.id)}\n                >\n                  Delete\n                </button>\n              </td>\n              <td>\n                {<Link to={\"/course/\" + course.slug}>{course.title}</Link>}\n              </td>\n              <td>{authorName}</td>\n              <td>{course.category}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nCourseList.propTypes = {\n  courses: PropTypes.arrayOf(CustomTypes.CourseResult.isRequired),\n  deleteCourse: PropTypes.func.isRequired\n};\n\nCourseList.defaultProps = {\n  courses: []\n};\n\nexport default CourseList;\n\nfunction getAuthorName(authors, course) {\n  const author = authors.find(_author => _author.id === course.authorId);\n  return author ? author.name : \"\";\n}\n","import PropTypes from \"prop-types\";\n\nexport const CourseResult = PropTypes.shape({\n  id: PropTypes.number,\n  title: PropTypes.string.isRequired,\n  authorId: PropTypes.number,\n  category: PropTypes.string.isRequired\n});\n\n\nexport const AuthorResult = PropTypes.shape({\n  id: PropTypes.number,\n  name: PropTypes.string.isRequired,\n});\n","import {Dispatcher} from \"flux\"\n\nconst dispatcher = new Dispatcher();\n\nexport default dispatcher;","export default {\n    LOAD_COURSES : \"LOAD_COURSES\",\n    LOAD_COURSE_BY_SLUG : \"LOAD_COURSE_BY_SLUG\",\n    ADD_COURSE : \"ADD_COURSE\",\n    UPDATE_COURSE : \"UPDATE_COURSE\",\n    DELETE_COURSE : \"DELETE_COURSE\",\n}","import { EventEmitter } from \"events\";\nimport Dispatcher from \"../apiDispatcher\";\nimport CustomTypes from \"../actions/courseActionTypes\";\n\nconst CHANGE_EVENT = \"change\";\nlet _courses = [];\n\nclass CourseStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  getCourses() {\n    return _courses;\n  }\n\n  getCourseBySlug(slug) {\n    return _courses.find(_course => _course.slug === slug);\n  }\n}\n\nconst courseStore = new CourseStore();\nDispatcher.register(action => {\n  switch (action.type) {\n    case CustomTypes.ADD_COURSE:\n      _courses.push(action.course);\n      courseStore.emitChange();\n      break;\n    case CustomTypes.UPDATE_COURSE:\n      _courses = _courses.map(course => {\n        return course.id === action.course.id ? action.course : course;\n      });\n      courseStore.emitChange();\n      break;\n    case CustomTypes.DELETE_COURSE:\n      _courses = _courses.filter(\n        course => course.id !== parseInt(action.id, 10)\n      );\n      courseStore.emitChange();\n      break;\n    case CustomTypes.LOAD_COURSES:\n      _courses = action.courses;\n      courseStore.emitChange();\n      break;\n    default:\n  }\n});\n\nexport default courseStore;\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import dispatcher from \"../apiDispatcher\";\nimport * as courseApi from \"../api/courseApi\";\nimport actionTypes from \"../actions/courseActionTypes\";\n\nexport function loadCourses() {\n  return courseApi.getCourses().then(courses => {\n    dispatcher.dispatch({\n      type: actionTypes.LOAD_COURSES,\n      courses: courses\n    });\n  });\n}\n\nexport function loadCourseBySlug(slug) {\n  return courseApi.getCourseBySlug(slug).then(course => {\n    dispatcher.dispatch({\n      type: actionTypes.LOAD_COURSE_BY_SLUG,\n      course: course\n    });\n  });\n}\n\nexport function saveCourse(course) {\n  return courseApi.saveCourse(course).then(savedCourse => {\n    dispatcher.dispatch({\n      type: course.id ? actionTypes.UPDATE_COURSE : actionTypes.ADD_COURSE,\n      course: savedCourse\n    });\n  });\n}\n\nexport function deleteCourse(id) {\n  return courseApi.deleteCourse(id).then(() => {\n    dispatcher.dispatch({\n      type: actionTypes.DELETE_COURSE,\n      id: id\n    });\n  });\n}\n","export default {\n  LOAD_AUTHORS: \"LOAD_AUTHORS\",\n  SAVE_AUTHOR: \"SAVE_AUTHOR\",\n  UPDATE_AUTHOR: \"UPDATE_AUTHOR\",\n  DELETE_AUTHOR: \"DELETE_AUTHOR\"\n};\n","import { EventEmitter } from \"events\";\nimport Dispatcher from \"../apiDispatcher\";\nimport CustomTypes from \"../actions/authorActionTypes\";\n\nconst CHANGE_EVENT = \"change\";\nlet _authors = [];\n\nclass AuthorStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  getAuthors() {\n    return _authors;\n  }\n\n  getAuthorsById(id) {\n    return _authors.find(author => author.id === id);\n  }\n}\n\nconst authorStore = new AuthorStore();\n\nDispatcher.register(action => {\n  switch (action.type) {\n    case CustomTypes.LOAD_AUTHORS:\n      _authors = action.authors;\n      authorStore.emitChange();\n      break;\n    case CustomTypes.SAVE_AUTHOR:\n      _authors.push(action.author);\n      authorStore.emitChange();\n      break;\n    case CustomTypes.UPDATE_AUTHOR:\n      _authors = _authors.map(author =>\n        _authors.id === author.id ? action.author : author\n      );\n      authorStore.emitChange();\n      break;\n    case CustomTypes.DELETE_AUTHOR:\n      _authors = _authors.filter(\n        author => author.id !== parseInt(action.id, 10)\n      );\n      authorStore.emitChange();\n      break;\n    default:\n  }\n});\n\nexport default authorStore;\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/authors/\";\n\nexport function getAuthors() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function saveAuthor(author) {\n  return fetch(baseUrl + (author.id || \"\"), {\n    method: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(author)\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteAuthor(authorId) {\n  return fetch(baseUrl + authorId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import dispatcher from \"../apiDispatcher\";\nimport * as authorApi from \"../api/authorApi\";\nimport actionTypes from \"../actions/authorActionTypes\";\n\nexport function loadAuthors() {\n  return authorApi.getAuthors().then(_authors => {\n    dispatcher.dispatch({\n      type: actionTypes.LOAD_AUTHORS,\n      authors: _authors\n    });\n  });\n}\n\nexport function saveAuthor(_author) {\n  return authorApi.saveAuthor(_author).then(_savedAuthor => {\n    dispatcher.dispatch({\n      type: _author.id ? actionTypes.UPDATE_AUTHOR : actionTypes.SAVE_AUTHOR,\n      author: _savedAuthor\n    });\n  });\n}\n\nexport function deleteAuthor(id) {\n  return authorApi.deleteAuthor(id).then(() => {\n    dispatcher.dispatch({\n      type: actionTypes.DELETE_AUTHOR,\n      id\n    });\n  });\n}\n","import React, { useEffect, useState } from \"react\";\nimport CourseList from \"./CourseList\";\nimport { Link } from \"react-router-dom\";\nimport store from \"../../courseStore/CourseStore\";\nimport * as courseActions from \"../../actions/courseActions\";\nimport { toast } from \"react-toastify\";\nimport authorStore from \"../../authorStore/AuthorStore\";\nimport * as authorActions from \"../../actions/authorActions\";\n\nconst CoursesPage = () => {\n  const [courses, setCourses] = useState(store.getCourses());\n  const [authors, setAuthors] = useState(authorStore.getAuthors());\n\n  useEffect(() => {\n    store.addChangeListener(onChange);\n    if (store.getCourses().length === 0) {\n      courseActions.loadCourses();\n      authorActions.loadAuthors();\n    }\n    return () => store.removeChangeListener(onChange);\n  }, []);\n\n  function onChange() {\n    setCourses(store.getCourses());\n    setAuthors(authorStore.getAuthors());\n  }\n\n  const handleDelete = id => {\n    courseActions.deleteCourse(id).then(() => {\n      toast.success(\"Course deleted successfully\");\n    });\n  };\n  return (\n    <>\n      <h2>Courses</h2>\n      <Link className=\"btn btn-primary\" to=\"/course\">\n        Add Course\n      </Link>\n      <CourseList\n        courses={courses}\n        deleteCourse={handleDelete}\n        authors={authors}\n      />\n    </>\n  );\n};\n\nexport default CoursesPage;\n","import React from \"react\";\n\nconst AboutPage = () => {\n  return (\n    <>\n      <h2>About</h2>\n      <p>This page uses React flux</p>\n    </>\n  );\n};\n\nexport default AboutPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst PageNotFound = () => {\n  return (\n    <div>\n      <h1>Page Not Found</h1>\n      <p>\n        {\" \"}\n        <Link to=\"/\">Home Page</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextInput = ({ id, label, name, value, onChange, error }) => {\n  let wrapperClass = \"form-group\";\n  if (error || error.length > 0) wrapperClass += \" has-error\";\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={id}>{label}</label>\n      <div className=\"field\">\n        <input\n          id={id}\n          type=\"text\"\n          name={name}\n          className=\"form-control\"\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInput.defaultProps = {\n  error: \"\"\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectInput = ({ id, label, name, value, onChange, error, options }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={id}>{label}</label>\n      <div className=\"field\">\n        <select\n          id={id}\n          name={name}\n          value={value}\n          className=\"form-control\"\n          onChange={onChange}\n        >\n          <option key=\"-1\" value=\"\">\n            Select value\n          </option>\n          {options}\n        </select>\n      </div>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nSelectInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  options: PropTypes.array.isRequired\n};\n\nSelectInput.defaultProps = {\n  error: \"\"\n};\n\nexport default SelectInput;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as CustomTypes from \"../customTypes/CustomTypes\";\r\nimport TextInput from \"../common/Textinput\";\r\nimport SelectInput from \"../common/SelectInput\";\r\n\r\nfunction CourseForm({ onSubmit, course, onChange, errors, authors }) {\r\n  const options = authors.map(_author => (\r\n    <option key={_author.id} value={_author.id}>\r\n      {_author.name}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <TextInput\r\n        label=\"Title\"\r\n        id=\"title\"\r\n        name=\"title\"\r\n        value={course.title}\r\n        onChange={onChange}\r\n        error={errors.title}\r\n      />\r\n\r\n      <SelectInput\r\n        label=\"Author\"\r\n        id=\"author\"\r\n        name=\"authorId\"\r\n        value={course.authorId || 0}\r\n        onChange={onChange}\r\n        error={errors.authorId}\r\n        options={options}\r\n      />\r\n\r\n      <TextInput\r\n        label=\"Category\"\r\n        id=\"category\"\r\n        name=\"category\"\r\n        value={course.category}\r\n        onChange={onChange}\r\n        error={errors.category}\r\n      />\r\n\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nCourseForm.propTypes = {\r\n  course: CustomTypes.CourseResult,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nexport default CourseForm;\r\n","import React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport { toast } from \"react-toastify\";\nimport store from \"../../courseStore/CourseStore\";\nimport * as courseActions from \"../../actions/courseActions\";\nimport authorStore from \"../../authorStore/AuthorStore\";\nimport * as authorActions from \"../../actions/authorActions\";\n\nconst Course = props => {\n  const [courses, setCourses] = useState(store.getCourses());\n  const [authors, setAuthors] = useState(authorStore.getAuthors());\n\n  const [errors, setErrors] = useState({});\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  });\n\n  useEffect(() => {\n    const slug = props.match.params.slug;\n    store.addChangeListener(onChange);\n\n    if (courses.length === 0) {\n      courseActions.loadCourses();\n      authorActions.loadAuthors();\n    } else if (slug) {\n      let _course = store.getCourseBySlug(slug);\n      if (_course == null) props.history.push(\"/dummy\");\n      setCourse(_course);\n    }\n    return () => store.removeChangeListener(onChange);\n  }, [props.match.params.slug, courses.length, props.history]);\n\n  function onChange() {\n    setCourses(store.getCourses());\n    setAuthors(authorStore.getAuthors());\n  }\n\n  const saveCourse = event => {\n    event.preventDefault();\n    if (!isFormInvalid()) return;\n\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved\");\n    });\n  };\n\n  function isFormInvalid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Invalid title\";\n    if (!course.authorId) _errors.authorId = \"Invalid author id\";\n    if (!course.category) _errors.category = \"Invalid catgory\";\n    setErrors(_errors);\n    return Object.keys(_errors).length === 0;\n  }\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const updatedCourse = { ...course, [name]: value };\n    setCourse(updatedCourse);\n  };\n\n  return (\n    <>\n      <h2> Manage Course</h2>\n      <CourseForm\n        errors={errors}\n        onSubmit={saveCourse}\n        onChange={handleChange}\n        course={course}\n        authors={authors}\n      />\n    </>\n  );\n};\n\nexport default Course;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as CustomTypes from \"../customTypes/CustomTypes\";\n\nconst AuthorList = ({ authors, deleteAuthor }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>&nbsp;</th>\n          <th>Author Id</th>\n          <th>Author Name</th>\n        </tr>\n      </thead>\n      <tbody>\n        {authors.map(author => {\n          return (\n            <tr key={author.id}>\n              <td>\n                <button\n                  className=\"btn btn-outline-danger\"\n                  onClick={() => deleteAuthor(author.id)}\n                >\n                  Delete\n                </button>\n              </td>\n              <td>{author.id}</td>\n              <td>{author.name}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nAuthorList.propTypes = {\n  courses: PropTypes.arrayOf(CustomTypes.AuthorResult.isRequired),\n  deleteAuthor: PropTypes.func.isRequired\n};\n\nAuthorList.defaultProps = {\n  authors: []\n};\n\nexport default AuthorList;\n","import React, { useEffect, useState } from \"react\";\nimport AuthorList from \"./AuthorList\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport authorStore from \"../../authorStore/AuthorStore\";\nimport * as authorActions from \"../../actions/authorActions\";\n\nconst AuthorsPage = () => {\n  const [authors, setAuthors] = useState(authorStore.getAuthors());\n\n  useEffect(() => {\n    authorStore.addChangeListener(onChange);\n    if (authorStore.getAuthors().length === 0) authorActions.loadAuthors();\n\n    return () => authorStore.removeChangeListener(onChange);\n  }, []);\n\n  function onChange() {\n    setAuthors(authorStore.getAuthors());\n  }\n\n  const handleDelete = id => {\n    authorActions.deleteAuthor(id).then(() => {\n      toast.success(\"Author deleted successfully\");\n    });\n  };\n\n  return (\n    <>\n      <h2>Authors</h2>\n      <Link className=\"btn btn-primary\" to=\"/author\">\n        Add Author\n      </Link>\n      <AuthorList authors={authors} deleteAuthor={handleDelete} />\n    </>\n  );\n};\n\nexport default AuthorsPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as CustomTypes from \"../customTypes/CustomTypes\";\nimport TextInput from \"../common/Textinput\";\n\nfunction AuthorForm({ onSubmit, onChange, errors, author }) {\n  return (\n    <form onSubmit={onSubmit}>\n      <TextInput\n        label=\"Author Name\"\n        id=\"name\"\n        name=\"name\"\n        value={author.name}\n        onChange={onChange}\n        error={errors.name}\n      />\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n    </form>\n  );\n}\n\nAuthorForm.propTypes = {\n  author: CustomTypes.AuthorResult,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nexport default AuthorForm;\n","import React, { useState, useEffect } from \"react\";\nimport AuthorForm from \"./AuthorForm\";\nimport { toast } from \"react-toastify\";\nimport authorStore from \"../../authorStore/AuthorStore\";\nimport * as authorActions from \"../../actions/authorActions\";\n\nconst Author = props => {\n  const [authors, setAuthors] = useState(authorStore.getAuthors());\n  const [errors, setErrors] = useState({});\n  const [author, setAuthor] = useState({\n    id: null,\n    name: \"\"\n  });\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    authorStore.addChangeListener(onChange);\n\n    if (authors.length === 0) {\n      authorActions.loadAuthors();\n    } else if (id) {\n      let _author = authorStore.getAuthorsById(id);\n      if (_author == null) props.history.push(\"/dummy\");\n      setAuthor(_author);\n    }\n    return () => authorStore.removeChangeListener(onChange);\n  }, [props.match.params.id, authors.length, props.history]);\n\n  function onChange() {\n    setAuthors(authorStore.getAuthors());\n  }\n\n  const saveAuthor = event => {\n    event.preventDefault();\n    if (!isFormInvalid()) return;\n\n    authorActions.saveAuthor(author).then(() => {\n      props.history.push(\"/authors\");\n      toast.success(\"Author saved\");\n    });\n  };\n\n  function isFormInvalid() {\n    const _errors = {};\n    if (!author.name) _errors.name = \"Invalid author name\";\n    setErrors(_errors);\n    return Object.keys(_errors).length === 0;\n  }\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    const updatedAuthor = { ...Author, [name]: value };\n    setAuthor(updatedAuthor);\n  };\n\n  return (\n    <>\n      <h2> Manage Author</h2>\n      <AuthorForm\n        errors={errors}\n        onSubmit={saveAuthor}\n        onChange={handleChange}\n        author={author}\n      />\n    </>\n  );\n};\n\nexport default Author;\n","import React from \"react\";\nimport Header from \"./common/Header\";\nimport { Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport CoursesPage from \"./courses/CoursesPage\";\nimport AboutPage from \"./pages/AboutPage\";\nimport PageNotFound from \"./pages/404\";\nimport Course from \"../components/courses/Course\";\nimport { ToastContainer } from \"react-toastify\";\nimport AuthorsPage from \"../components/authors/AuthorsPage\";\nimport Author from \"../components/authors/Author\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst App = () => {\n  return (\n    <div className=\"container-fluid\">\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route exact path=\"/courses\" component={CoursesPage} />\n        <Route exact path=\"/course/:slug\" component={Course} />\n        <Route exact path=\"/course\" component={Course} />\n        <Route exact path=\"/authors\" component={AuthorsPage} />\n        <Route exact path=\"/author\" component={Author} />\n        <Route exact path=\"/about\" component={AboutPage} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}